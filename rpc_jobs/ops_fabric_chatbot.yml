- project:
    name: "ops-fabric-chatbot-pre-merge"
    repo_name: "ops-fabric-chatbot"
    repo_url: "https://github.com/rcbops/ops-fabric-chatbot"
    branches:
      - "master"
    image:
      - container:
          SLAVE_TYPE: "container"
    scenario:
      - "unit"
    action:
      - "test"
    jobs:
      - 'PR_{repo_name}-{series}-{image}-{scenario}-{action}'

- job:
    name: Ops-Fabric-Chatbot-Gate
    description: "lint and unit tests for ops-fabric-chatbot"
    disabled: false
    display-name: "ops-fabric-chatbot lint and unit tests"
    project-type: workflow
    concurrent: true
    properties:
      - github:
          url: https://github.com/rcbops/ops-fabric-chatbot/
      - build-discarder:
          num-to-keep: 30
    parameters:
      - rpc_gating_params
    triggers:
      - github-pull-request:
          org-list:
              - rcbops
          github-hooks: true
          trigger-phrase: 'recheck'
          only-trigger-phrase: false
          auth-id: "github_account_rpc_jenkins_svc"
          status-context: 'ops-fabric-chatbot-gate'
    dsl: |
      library "rpc-gating@${env.RPC_GATING_BRANCH}"
      common.globalWraps(){
        common.clone_with_pr_refs()
        stage("Build Docker Image"){
            chatbot_container = docker.build env.BUILD_TAG.toLowerCase()
        }
        chatbot_container.inside {
          timeout(time: 5, units: "MINUTES"){
            stage("Install Deps"){
              // Install deps is run here to ensure project level npm deps
              // are installed.
              sh """#!/bin/bash -xe
                ./install-deps.sh
              """
            }
            stage("Run Tests"){
              sh """#!/bin/bash -xe
                ./gate.sh
              """
            }
            stage("Collect Results"){
              sh "ls *-results.xml"
              junit testResults: '*-results.xml'
            }
          } // timeout
        } // docker container
      } // global wraps
