- project:
    name: 'RPC-Artifact_Build-Jobs'
    # Note: branch is the branch for periodics to build
    #       branches is the branch pattern to match for PR Jobs.
    series:
      - artifacts:
          branch: artifacts-14.0
          branches: "artifacts-.*"
    image:
      - trusty:
          IMAGE: "Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)"
    context:
      - Apt
      - Python
      - Container
      - Pipeline
    ztrigger:
      - pr:
          CRON: ""
          STAGES: "Allocate Resources, Connect Slave, Build {context} Artifacts, Cleanup"
      - periodic:
          branches: "do_not_build_on_pr"
          PUSH_TO_MIRROR: "YES"
          NUM_TO_KEEP: 7
    exclude:
      - context: Apt
        ztrigger: periodic
      - context: Python
        ztrigger: periodic
      - context: Container
        ztrigger: periodic
      - context: Pipeline
        ztrigger: pr
    jobs:
      - 'RPC-Artifact_Build-{series}-{image}-{context}-{ztrigger}'

- job-template:
    # DEFAULTS
    IMAGE: "Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)"
    DEPLOY_SWIFT: "yes"
    DEPLOY_CEPH: "yes"
    DEPLOY_ELK: "yes"
    CRON: "H H(9-21) * * 1-5"
    CONTEXT_USER_VARS: ""
    TRIGGER_USER_VARS: ""
    SERIES_USER_VARS: ""
    UPGRADE_FROM_REF: ""
    STAGES: "Build Apt Artifacts, Allocate Resources, Connect Slave, Build Python Artifacts, Build Container Artifacts, Cleanup"
    branch: artifacts-14.0
    PUSH_TO_MIRROR: "NO"
    NUM_TO_KEEP: 30

    # TEMPLATE
    name: 'RPC-Artifact_Build-{series}-{image}-{context}-{ztrigger}'
    project-type: workflow
    concurrent: false
    properties:
      - build-discarder:
          num-to-keep: {NUM_TO_KEEP}
    parameters:
      # See params.yml
      - rpc_repo_params:
         RPC_BRANCH: "{branch}"
      - rpc_gating_params
      - single_use_slave_params:
         IMAGE: "{IMAGE}"
         FLAVOR: "performance2-15"
         REGION: "DFW"
      - string:
          name: PUSH_TO_MIRROR
          default: "{PUSH_TO_MIRROR}"
          description: "Set this to YES if you want to push the newly built artifacts to rpc-repo."
      - string:
          name: STAGES
          default: "{STAGES}"
          description: |
            Pipeline stages to run CSV. Note that this list does not influence execution order.
            Options:
              Allocate Resources
              Connect Slave
              Build Apt Artifacts
              Build Python Artifacts
              Build Container Artifacts
              Pause (use to hold instance for investigation before cleanup)
              Cleanup
    triggers:
      - timed: "{CRON}"
      - github-pull-request:
          org-list:
            - rcbops
          github-hooks: true
          trigger-phrase: '.*recheck_cit_all.*|.*recheck_cit_artifact_{image}_{context}.*'
          only-trigger-phrase: false
          white-list-target-branches:
            - "{branches}"
          auth-id: "github_account_rpc_jenkins_svc"
          status-context: 'CIT/artifact-{image}-{context}'
    dsl: |
      node('ArtifactBuilder2') {{
        dir("rpc-gating") {{
            git branch: env.RPC_GATING_BRANCH, url: env.RPC_GATING_REPO
            common = load 'pipeline-steps/common.groovy'
            artifact_build = load 'pipeline-steps/artifact_build.groovy'
        }}
        artifact_build.apt()
      }} // node ArtifactBuilder2
      node() {{
        dir("rpc-gating") {{
            git branch: env.RPC_GATING_BRANCH, url: env.RPC_GATING_REPO
            common = load 'pipeline-steps/common.groovy'
            pubcloud = load 'pipeline-steps/pubcloud.groovy'
            artifact_build = load 'pipeline-steps/artifact_build.groovy'
        }}
        artifact_build.python()
        artifact_build.container()
      }} // node
